# Основные понятия в ООП
# 1. Класс - описание модели будущего объекта
# 2. Экземпляр - экземпляр (объект) класса
# 3. Объект - конкретное воплощение класса
# 4. атрибуты - свойства и действия, присущие объекту
# 5. метод - действиие над собой и другими объектами

class Fruit:

    # pass # изначально можно задать пустой класс
def __init__ (self, n, w, c): # конструктор выделяет память и делает стратовую инциализацию
    self.name = n
    self.weight = w
    self.color = c

def washed(self):  # self - ссылка на объект, которому принадлежит класс
    print(f'Фрукт помыт')

def about_me(self):
    print(f'Я фрукт "{self.name}", который весит {self.weight} грамм')

f1 = Fruit('Груша', 150)  # () вызван конструктор и выделена память под него
f1.name = 'Груша'
f1.weight = 150

print(f'Фрукт: {f1.name} весит {f1.weight} грамм')
f1.washed()

f3 = Fruit('Лимон', )  # () вызван конструктор и выделена память под него
f3.name = 'Лимон'
f3.weight = 150
f3.color = 'Желтый'

# print(f1.color) - у f1 цвет не назначался

print(f'Фрукт: {f3.name} весит {f3.weight} грамм')


class Vegetable:
    pass


f2 = Vegetable()  # () вызван конструктор и выделена память под него
f2.name = 'Картофель'
f2.weight = 100

print(f'Овощь: {f2.name} весит {f2.weight} грамм')
